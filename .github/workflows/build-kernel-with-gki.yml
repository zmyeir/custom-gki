name: Build Kernel with GKI
on:
  workflow_dispatch:

jobs:
  build:
    name: Build Kernel by ${{ github.actor }}
    runs-on: ubuntu-latest
    steps:
      - name: Set swap
        run: |
          export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
          sudo swapoff $SWAP_FILE
          sudo rm -rf $SWAP_FILE
          sudo fallocate -l 16G /swap_filex
          sudo chmod 600 /swap_filex
          sudo mkswap /swap_filex
          sudo swapon /swap_filex
          df -h
          free -h

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 git
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /bin/repo

      - name: Set Environment Variable
        run: |
          echo "BUILD_TIME=$(date "+%y%m%d%H")" >> $GITHUB_ENV
          sudo mkdir -p /mnt/kernel_workspace
          sudo chmod 0777 /mnt/kernel_workspace
          
          git config --global user.email "build-user@build-host"
          git config --global user.name "build-user"

      - name: Download source code
        run: |
          cd /mnt/kernel_workspace
          repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-android14-6.1-lts
          REMOTE_BRANCH=$(git ls-remote https://android.googlesource.com/kernel/common android14-6.1-lts)
          DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
          if grep -q deprecated <<< $REMOTE_BRANCH; then
            sed -i "s/\"android14-6.1-lts\"/\"deprecated\/android14-6.1-lts\"/g" $DEFAULT_MANIFEST_PATH
          fi
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast

      - name: Build Kernel
        run: |
          cd /mnt/kernel_workspace
          tools/bazel build --config=fast //common:kernel_aarch64_dist

      - name: Add KernelPatch
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/kernel_platform..."
          cd "/mnt/kernel_workspace"
          
          mkdir kernelpatch && cd kernelpatch
          
          echo "Download Pre-build tools"
          wget https://github.com/bmax121/KernelPatch/releases/download/0.11.2/kpimg-android -O kpimg
          wget https://github.com/bmax121/KernelPatch/releases/download/0.11.2/kptools-linux -O kptools
          chmod +x kptools
          
          echo "Patch Image"
          cp ../bazel-bin/common/kernel_aarch64/Image ./Image
          ./kptools -p --image Image --skey "SuperKey@65535" --kpimg ./kpimg --out ./kernel

      - name: Create AnyKernel3
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/..."
          cd "/mnt/kernel_workspace/"
          
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          
          echo "Copying Image"
          cp ./kernelpatch/kernel ./AnyKernel3/Image

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-OP12-6.1-APatch-${{ env.BUILD_TIME }}
          path: /mnt/kernel_workspace/AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ env.BUILD_TIME }}
          path: /mnt/kernel_workspace/out/dist/Image
