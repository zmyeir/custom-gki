name: Build OnePlus 12 Android 14 6.1 Kernel

on:
  workflow_dispatch:

jobs:
  build-kernel-a14-6-1-kernelsu-susfs:
    runs-on: ubuntu-22.04

    steps:
      - name: Set swap  
        run: |
          export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
          sudo swapoff $SWAP_FILE
          sudo rm -rf $SWAP_FILE
          sudo fallocate -l 16G /swap_filex
          sudo chmod 600 /swap_filex
          sudo mkswap /swap_filex
          sudo swapon /swap_filex
          df -h
          free -h

      - name: Set CONFIG Environment Variable
        run: |
          # Set CONFIG dynamically based on matrix values
          CONFIG="kernel_workspace"
          
          # Set CONFIG as an environment variable for future steps
          echo "CONFIG=$CONFIG" >> $GITHUB_ENV
          
          echo "CONFIG set to: $CONFIG"

          sudo mkdir -p /mnt/kernel_workspace
          sudo chmod 0777 /mnt/kernel_workspace

      - name: Install Repo
        run: |
          # Install dependencies
          mkdir -p ./git-repo
          curl https://storage.googleapis.com/git-repo-downloads/repo > ./git-repo/repo
          chmod a+rx ./git-repo/repo
          echo "REPO=$GITHUB_WORKSPACE/./git-repo/repo" >> $GITHUB_ENV

      - name: Clone AnyKernel3 and Other Dependencies
        run: |
          echo "Cloning AnyKernel3 and other dependencies..."
    
          # Define the branch names using the matrix values
          ANYKERNEL_BRANCH="android14-6.1"
          SUSFS_BRANCH="gki-android14-6.1"

          # Debug print the branches
          echo "Using branch for AnyKernel3: $ANYKERNEL_BRANCH"
          echo "Using branch for SUSFS: $SUSFS_BRANCH"

          # Clone repositories using the branch names
          git clone https://github.com/TheWildJames/AnyKernel3.git -b "$ANYKERNEL_BRANCH"
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b "$SUSFS_BRANCH"
          git clone https://github.com/zmyeir/custom-gki.git
      
      - name: Initialize and Sync Kernel Source
        run: |
          echo "Creating folder for configuration: $CONFIG..."
          cd "/mnt/$CONFIG"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          $REPO init -u https://github.com/RealJohnGalt/opsm8650_kernel_manifest.git -b kplatform -m default.xml
          
          # Sync repo and apply patches
          $REPO --version
          $REPO --trace sync -c -j$(nproc --all) --no-tags --fail-fast
          
      - name: Add KernelSU
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG..."
          cd "/mnt/$CONFIG/kernel_platform"
          
          echo "Adding KernelSU..."
          curl -LSs "https://raw.githubusercontent.com/backslashxx/KernelSU/magic/kernel/setup.sh" | bash -s magic
          cd ./KernelSU/kernel
          sed -i 's/ccflags-y += -DKSU_VERSION=16/ccflags-y += -DKSU_VERSION=12021/' ./Makefile
          
      - name: Apply SUSFS Patches
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG..."
          cd "/mnt/$CONFIG/kernel_platform"
          
          echo "Applying SUSFS patches..."
          
          # Copy SUSFS patches
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU/
          cp $GITHUB_WORKSPACE/custom-gki/patches/susfs.patch ./KernelSU/
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/fs/* ./common/fs/
          cp $GITHUB_WORKSPACE/susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/

          cd ./KernelSU
          
          # Apply SUSFS patch for KernelSU
          patch -p1 --forward < 10_enable_susfs_for_ksu.patch || true
          patch -p1 < susfs.patch
          
          # Change to common directory and apply SUSFS patch
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true

      - name: Apply Hide Stuff Patches
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG..."
          cd "/mnt/$CONFIG/kernel_platform/common"
          # Apply additional patch
          cp $GITHUB_WORKSPACE/custom-gki/patches/69_hide_stuff.patch ./
          patch -p1 -F 3 < 69_hide_stuff.patch

      - name: Add SUSFS Configuration Settings
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG/kernel_platform..."
          cd "/mnt/$CONFIG/kernel_platform"
          
          echo "Adding configuration settings to gki_defconfig..."
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_SU=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add additional tmpfs config setting
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Add Misc Configuration Settings
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG/kernel_platform..."
          cd "/mnt/$CONFIG/kernel_platform"
          
          echo "Adding configuration settings to gki_defconfig..."
          echo "CONFIG_PID_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_POSIX_MQUEUE=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPC_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_USER_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_BPF_STREAM_PARSER=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Run sed and perl Commands
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG..."
          cd "/mnt/$CONFIG/kernel_platform"
          
          echo "Running sed commands..."
          
          # Run sed commands for modifications
          sed -i 's/check_defconfig//' ./common/build.config.gki
          sed -i '$s|echo "\$res"|echo "Zsck+"|' ./common/scripts/setlocalversion
          sed -i "/stable_scmversion_cmd/s/-maybe-dirty//g" ./build/kernel/kleaf/impl/stamp.bzl
          sed -i 's/-dirty//' ./common/scripts/setlocalversion

          #sed -i '/echo "LTO $LTO "/i export LTO=thin' ./oplus/build/oplus_setup.sh
          #sed -i 's/export RECOMPILE_KERNEL="1"/export RECOMPILE_KERNEL="0"/g' ./oplus/build/oplus_setup.sh
          #sed -i 's/export REPACK_IMG=true/export REPACK_IMG=false/g' ./oplus/build/oplus_setup.sh
          
          #sed -i 's/^#\(choose_lto_type \$3\)/\1/' ./oplus/build/oplus_setup.sh
          #sed -i 's/^#\(choose_target_build \$4\)/\1/' ./oplus/build/oplus_setup.sh
          #sed -i 's/^#\(choose_repack_img \$5\)/\1/' ./oplus/build/oplus_setup.sh

          sed -i 's|^source kernel_platform/oplus/build/oplus_setup.sh \$1 \$2|source kernel_platform/oplus/build/oplus_setup.sh \$1 \$2 \$3 \$4 \$5|' ./oplus/build/oplus_build_kernel.sh
         
          # Run perl command to modify UTS_VERSION
          # perl -pi -e 's{UTS_VERSION="\$\(echo \$UTS_VERSION \$CONFIG_FLAGS \$TIMESTAMP \| cut -b -\$UTS_LEN\)"}{UTS_VERSION="#1 SMP PREEMPT Sat Apr 20 04:20:00 UTC 2024"}' ./common/scripts/mkcompile_h

      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG..."
          cd "/mnt/$CONFIG"
          
          echo "Building the kernel..."
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*
          git config --global user.email "build-boot@build-host"
          git config --global user.name "builder"
          git add *
          git commit -s -a -m "getting rid of -dirty"
          ./kernel_platform/oplus/build/oplus_build_kernel.sh pineapple gki thin all none
   
      - name: Create Bootimgs Folder and Copy Images
        run: |
          echo "Changing to configuration directory: /mnt/$CONFIG..."
          cd "/mnt/$CONFIG"
          
          echo "Copying Image"
          cp ./out/dist/Image $GITHUB_WORKSPACE/AnyKernel3/Image
          ls ./out/dist/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Anykernel3-OP12-A15-android14-6.1-KernelSU-SUSFS
          path: |
            $GITHUB_WORKSPACE/AnyKernel3
