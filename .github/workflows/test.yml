name: Build OnePlus 12 Kernel with yaap test

on:
  workflow_dispatch:
    inputs:
      CONFIG:
        description: "CONFIG"
        required: true
        default: 'fast'
      LTO:
        description: "LTO"
        required: true
        default: 'thin'

jobs:
  build-kernel-with-kernelpatch:
    runs-on: ubuntu-latest

    steps:
      - name: Set swap
        run: |
          export SWAP_FILE=$(swapon --show=NAME | tail -n 1)
          sudo swapoff $SWAP_FILE
          sudo rm -rf $SWAP_FILE
          sudo fallocate -l 16G /swap_filex
          sudo chmod 600 /swap_filex
          sudo mkswap /swap_filex
          sudo swapon /swap_filex
          df -h
          free -h

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y python3 git
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
          chmod a+x ~/repo
          sudo mv ~/repo /bin/repo

      - name: Set Environment Variable
        run: |
          echo "BUILD_TIME=$(date "+%y%m%d%H")" >> $GITHUB_ENV
          sudo mkdir -p /mnt/kernel_workspace
          sudo chmod 0777 /mnt/kernel_workspace
          
          git config --global user.email "build-user@build-host"
          git config --global user.name "build-user"

      - name: Sync Kernel Source
        run: |
          echo "Creating folder for configuration: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"
          
          # Initialize and sync kernel source
          echo "Initializing and syncing kernel source..."
          repo init -u https://github.com/RealJohnGalt/opsm8650_kernel_manifest.git -b kplatform -m default.xml
          
          # Sync repo and apply patches
          repo --version
          repo --trace sync -c -j$(nproc --all) --no-tags --fail-fast
          cd kernel_platform
          # rm common -rf
          # git clone --depth=1 https://github.com/RealJohnGalt/kernel_common_oneplus_sm8650.git -b kplatform-staging common
          
          # Modify
          rm -rf ./common/android/abi_gki_protected_exports_* || echo "No protected exports!"
          rm -rf ./msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
          sed -i 's/check_defconfig//' common/build.config.gki
          sed -i '$s|echo "\$res"|echo "-zsck"|' common/scripts/setlocalversion

      - name: Apply Lxc Patches
        run: |
          git clone https://github.com/zmyeir/custom-gki.git
          echo "Changing to configuration directory: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace/kernel_platform/common"
          cp $GITHUB_WORKSPACE/custom-gki/patches/lxc.patch ./
          patch -p2 < lxc.patch

      - name: Add Configuration Settings
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/kernel_platform..."
          cd "/mnt/kernel_workspace/kernel_platform"
          echo "Adding configuration settings to gki_defconfig..."
          echo "CONFIG_PID_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_POSIX_MQUEUE=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_IPC_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_USER_NS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_BPF_STREAM_PARSER=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_TMPFS_XATTR=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CGROUP_DEVICE=y" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Build the Kernel
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace..."
          cd "/mnt/kernel_workspace"
          
          cd kernel_platform/common
          git add -A
          git commit -s -a -m "build"
          cd ../msm-kernel
          git add -A
          git commit -s -a -m "build"
          
          cd "/mnt/kernel_workspace/kernel_platform"
          
          echo "Building the kernel..."
          # ./kernel_platform/oplus/build/oplus_build_kernel.sh pineapple gki
          python3 build_with_bazel.py -t pineapple gki --config=${{ github.event.inputs.CONFIG }} --lto=${{ github.event.inputs.LTO }} -o "$(pwd)/../out"

      - name: Add KernelPatch
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/kernel_platform..."
          cd "/mnt/kernel_workspace"
          
          mkdir kernelpatch && cd kernelpatch
          
          echo "Download Pre-build tools"
          wget https://github.com/bmax121/KernelPatch/releases/download/0.11.2/kpimg-android -O kpimg
          wget https://github.com/bmax121/KernelPatch/releases/download/0.11.2/kptools-linux -O kptools
          chmod +x kptools
          
          echo "Patch Image"
          cp ../out/dist/Image ./Image
          ./kptools -p --image Image --skey "SuperKey@65535" --kpimg ./kpimg --out ./kernel

      - name: Create AnyKernel3
        run: |
          echo "Changing to configuration directory: /mnt/kernel_workspace/..."
          cd "/mnt/kernel_workspace/"
          
          git clone https://github.com/Kernel-SU/AnyKernel3 --depth=1
          
          echo "Copying Image"
          cp ./kernelpatch/kernel ./AnyKernel3/Image

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-OP12-6.1-APatch-${{ env.BUILD_TIME }}
          path: /mnt/kernel_workspace/AnyKernel3/*

      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ env.BUILD_TIME }}
          path: /mnt/kernel_workspace/out/dist/Image
